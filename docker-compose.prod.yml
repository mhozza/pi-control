version: "3.7"

x-logging: &logging
  logging:
    driver: syslog
    options:
      tag: "{{.Name}}"

x-pi-control: &pi-control
  <<: *logging
  image: mhozza/pi-control:latest
  volumes:
    - ${CPU_TEMPERATURE_FILE-./docker/shared/fake_cpu_temperature.txt}:/host_sys/temp:ro
    - ${BACKUP_FILENAME-./docker/shared/fake_rpi.dump}:/backup/rpi.dump:ro
  devices:
    - ${TEMPERATURE_SENSOR_DEVICE-/dev/zero}:/dev/i2c-1
  environment:
    - DB_BACKEND=django.db.backends.postgresql
    - DB_NAME=pi_control
    - DB_USER=pi_control
    - DB_HOST=db
    - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
    - CPU_TEMPERATURE_FILE=/host_sys/temp
    - BACKUP_FILENAME=/backup/rpi.dump
    - SERVER_NAME
    - SECRET
    - AUTH_KEY
    - AUTH_SECRET
    - DEFAULT_FROM_EMAIL
    - EMAIL_HOST
    - EMAIL_PORT
    - EMAIL_HOST_USER
    - EMAIL_HOST_PASSWORD
    - EMAIL_USE_TLS
  restart: always

services:
  db:
    <<: *logging
    image: postgres:11-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pi_control
      - POSTGRES_DB=pi_control
    restart: always
  rabbitmq:
    <<: *logging
    image: rabbitmq:3.7-alpine
    restart: always
  web:
    <<: *pi-control
    environment:
      - HOST="${HOST-0.0.0.0}"
    ports:
      - "${PORT-8000}:80"
    depends_on:
      - db
  celery:
    <<: *pi-control
    command: celery -A pi_control worker --pidfile=""
    depends_on:
      - rabbitmq
      - db
  celerybeat:
    <<: *pi-control
    command: celery -A pi_control beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=""
    depends_on:
      - rabbitmq
      - db

volumes:
  db_data:
